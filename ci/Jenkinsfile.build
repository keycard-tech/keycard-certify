#!/usr/bin/env groovy
// vim:ft=Jenkinsfile
library 'status-jenkins-lib@v1.7.12'

pipeline {
  /* Allows to run the same Jenkinsfile on different platforms. */
  agent { label params.AGENT_LABEL }

  parameters {
    string(
      name: 'AGENT_LABEL',
      description: 'Label for targetted CI slave host: linux/macos/windows',
      defaultValue: params.AGENT_LABEL ?: getAgentLabel(),
    )
  }

  options {
    timestamps()
    ansiColor('xterm')
    /* This also includes wait time in the queue. */
    timeout(time: 10, unit: 'MINUTES')
    /* Abort old builds for non-main branches. */
    disableConcurrentBuilds()
    /* Allows combined build to copy */
    copyArtifactPermission('/keycard-certify/*')
    /* Limit builds retained. */
    buildDiscarder(logRotator(
      numToKeepStr: '5',
      daysToKeepStr: '30',
      artifactNumToKeepStr: '3',
    ))
  }

  environment {
    /* Disable MacOS app signing.
     * https://www.electron.build/code-signing */
    CSC_IDENTITY_AUTO_DISCOVERY = "false"
  }

  stages {
    stage('Deps') {
      steps { script {
        sh 'npm install'
      } }
    }

    stage('Build') {
      steps { script {
        sh 'npm run dist'
      } }
    }

    stage('Upload') {
      steps {
        archiveArtifacts(
          artifacts: 'dist/keycard-certify*',
          excludes: 'dist/*.blockmap'
        )
      }
    }
  } // stages

  post {
    always { cleanWs() }
  } // post
} // pipeline

/* This allows us to use one Jenkinsfile and run
 * jobs on different platforms based on job name. */
def getAgentLabel() {
    if (params.AGENT_LABEL) { return params.AGENT_LABEL }
    /* We extract the name of the job from currentThread because
     * before an agent is picked env is not available. */
    def tokens = Thread.currentThread().getName().split('/')
    def labels = []
    /* Check if the job path contains any of the valid labels. */
    ['linux', 'macos', 'windows', 'x86_64', 'aarch64', 'arm64'].each {
        if (tokens.contains(it)) { labels.add(it) }
    }
    return labels.join(' && ')
}
